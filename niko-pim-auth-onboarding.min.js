(()=>{"use strict";!function(e){const t="localhost"===e.location.hostname||"127.0.0.1"===e.location.hostname||e.location.hostname.includes("webflow.io"),o=t?"/dev":"",i={SUPABASE_URL:"https://bzjoxjqfpmjhbfijthpp.supabase.co",SUPABASE_ANON_KEY:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJ6am94anFmcG1qaGJmaWp0aHBwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU3NjIyMzksImV4cCI6MjA3MTMzODIzOX0.sL9omeLIgpgqYjTJM6SGQPSvUvm5z-Yr9rOzkOi2mJk",ROUTES:{CUSTOMER_ONBOARDING:`${o}/app/customer/onboarding`,RETAILER_ONBOARDING:`${o}/app/retailer/onboarding`,CUSTOMER_DASHBOARD:`${o}/app/customer/dashboard`,RETAILER_DASHBOARD:`${o}/app/retailer/dashboard`,LOGIN_PAGE:`${o}/app/auth/log-in`}},n={getItem:e=>{const t=`; ${document.cookie}`.split(`; ${e}=`);return 2===t.length?decodeURIComponent(t.pop().split(";").shift()):null},setItem:(e,t)=>{document.cookie=`${e}=${encodeURIComponent(t)}; max-age=604800; path=/; secure; samesite=lax`},removeItem:e=>{document.cookie=`${e}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; secure; samesite=lax`}};class s{constructor(){console.log("🚀 NikoAuthCore constructor called"),this.supabase=null,this.initialized=!1,this.authStateListeners=[],console.log("📋 Initial state set, calling init()"),this.init()}async init(){console.log("🔧 Loading Niko Auth Core v5.0.0 (Professional)"),console.log("🌍 Environment:",t?"DEVELOPMENT":"PRODUCTION"),console.log("📍 Current URL:",e.location.href),console.log("🛤️ Path prefix:",o||"(none)"),console.log("🍪 Document cookies available:",document.cookie?"YES":"NO"),"undefined"==typeof supabase?(console.log("📦 Supabase not found, loading from CDN..."),await this.loadSupabase(),console.log("✅ Supabase loaded successfully")):console.log("✅ Supabase already available"),console.log("⚙️ Initializing Supabase client with professional config..."),this.supabase=supabase.createClient(i.SUPABASE_URL,i.SUPABASE_ANON_KEY,{auth:{storage:n,autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!0,flowType:"implicit"},global:{headers:{"X-Client-Info":"niko-auth-v5"}}}),console.log("✅ Supabase client created with config:",{storage:"cookieStorage",autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!0,flowType:"implicit"}),this.initialized=!0,console.log("🎉 Niko Auth Core v5.0.0 initialized with professional security"),console.log("🔗 Available on window.NikoAuthCore and window.NikoAuth"),console.log("👂 Setting up auth state listener..."),this.setupAuthStateListener(),console.log("🚪 Setting up logout handlers..."),this.setupLogoutHandlers();const s=new URLSearchParams(e.location.hash.substring(1)),r=s.get("error_code"),a=s.get("error_description");(r||a)&&(console.error("❌ Auth error in URL:",r,a),e.history.replaceState({},document.title,e.location.pathname)),console.log("🔄 Letting Supabase detect session in URL...");try{await new Promise(e=>setTimeout(e,1e3));const{data:{session:t},error:o}=await this.supabase.auth.getSession();o&&console.error("❌ Error getting session:",o),t?(console.log("✅ Session detected by Supabase"),console.log("👤 User:",t.user?.email),this.handleAuthenticatedUser(t.user),e.location.hash&&e.history.replaceState({},document.title,e.location.pathname)):(console.log("🔍 No session in URL, checking auth state..."),await this.checkAuthState())}catch(e){console.error("❌ Failed to check session:",e),await this.checkAuthState()}console.log("✨ Initialization complete!")}loadSupabase(){return new Promise((e,t)=>{const o=document.createElement("script");o.src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2",o.onload=e,o.onerror=t,document.head.appendChild(o)})}async handleEmailConfirmation(){const t=new URLSearchParams(e.location.hash.substring(1)),o=t.get("access_token"),i=t.get("refresh_token");if(!o||!i)return console.log("📭 No email confirmation tokens in URL"),!1;console.log("📬 Email confirmation tokens found in URL"),console.log("🔑 Access token (first 20 chars):",o.substring(0,20)+"...");try{const{data:t,error:n}=await this.supabase.auth.setSession({access_token:o,refresh_token:i});return n?(console.error("❌ Error setting session from email confirmation:",n),!1):(console.log("✅ Session established from email confirmation"),console.log("👤 User confirmed:",t.user?.email),await new Promise(e=>setTimeout(e,500)),e.history.replaceState({},document.title,e.location.pathname),this.handleAuthenticatedUser(t.user),!0)}catch(e){return console.error("❌ Failed to handle email confirmation:",e),!1}}setupAuthStateListener(){this.supabase.auth.onAuthStateChange((e,t)=>{switch(console.log("Auth state change:",e),e){case"SIGNED_IN":console.log("User signed in:",t?.user?.email),this.handleAuthenticatedUser(t.user);break;case"SIGNED_OUT":console.log("User signed out"),this.handleSignedOutUser();break;case"TOKEN_REFRESHED":console.log("Token refreshed automatically");break;case"USER_UPDATED":console.log("User updated")}this.authStateListeners.forEach(o=>{try{o(e,t)}catch(e){console.error("Auth state listener error:",e)}})})}onAuthStateChange(e){return this.authStateListeners.push(e),()=>{const t=this.authStateListeners.indexOf(e);t>-1&&this.authStateListeners.splice(t,1)}}handleAuthenticatedUser(t){if(!t)return;const o=t.user_metadata?.user_type||t.user_metadata?.role||"customer",i=t.user_metadata?.name||t.email?.split("@")[0]||"User";this.populateUserData(t,i,o),this.showAuthenticatedContent(),this.applyRoleBasedVisibility(o),e.dispatchEvent(new CustomEvent("nikoAuthReady",{detail:{user:t,userType:o,authenticated:!0}})),console.log("User interface updated for:",i)}handleSignedOutUser(){document.querySelectorAll('[niko-data="auth-required"]').forEach(e=>{e.style.visibility="hidden",e.style.opacity="0"}),e.dispatchEvent(new CustomEvent("nikoAuthSignedOut",{detail:{authenticated:!1}})),this.isProtectedPage()&&this.redirectToLogin()}populateUserData(e,t,o){document.querySelectorAll('[niko-data="user-name"]').forEach(e=>{e.textContent=t}),document.querySelectorAll('[niko-data="user-email"]').forEach(t=>{t.textContent=e.email}),document.querySelectorAll('[niko-data="user-role"]').forEach(e=>{e.textContent=o});const i={name:['[data-user="name"]',".user-name","#user-name"],email:['[data-user="email"]',".user-email","#user-email"],role:['[data-user="role"]',".user-role","#user-role"]};i.name.forEach(e=>{document.querySelectorAll(e).forEach(e=>e.textContent=t)}),i.email.forEach(t=>{document.querySelectorAll(t).forEach(t=>t.textContent=e.email)}),i.role.forEach(e=>{document.querySelectorAll(e).forEach(e=>e.textContent=o)})}showAuthenticatedContent(){document.querySelectorAll('[niko-data="auth-required"]').forEach(e=>{e.style.visibility="visible",e.style.opacity="1"}),document.body&&document.body.hasAttribute("niko-data")&&"auth-required"===document.body.getAttribute("niko-data")&&(document.body.style.visibility="visible",document.body.style.opacity="1")}applyRoleBasedVisibility(e){document.querySelectorAll("[niko-role]").forEach(t=>{t.getAttribute("niko-role").split(",").map(e=>e.trim()).includes(e)||t.remove()})}async register(t,o,n,s){if(console.log("📝 REGISTER METHOD CALLED"),console.log("👤 Registering user:",{email:t,userType:s,name:n}),console.log("🔧 Initialized status:",this.initialized),!this.initialized)throw console.error("❌ Authentication system not initialized"),new Error("Authentication system not initialized");try{const r="retailer"===s.toLowerCase()?e.location.origin+i.ROUTES.RETAILER_ONBOARDING:e.location.origin+i.ROUTES.CUSTOMER_ONBOARDING;console.log("🔄 Redirect URL:",r),console.log("📧 Calling Supabase auth.signUp...");const{data:a,error:l}=await this.supabase.auth.signUp({email:t,password:o,options:{data:{name:n,user_type:s.toLowerCase(),role:s.toLowerCase()},emailRedirectTo:r,captchaToken:null}});return l?(console.error("❌ Registration error:",l),{success:!1,error:l.message}):(console.log("✅ Registration successful:",a.user?.email),console.log("👤 User data:",a.user),console.log("📧 Email confirmed?",a.user?.email_confirmed_at?"YES":"NO"),console.log("🔐 Session created?",a.session?"YES":"NO"),a.user?.email_confirmed_at||console.log("📮 Confirmation email should be sent to:",a.user?.email),console.log("📊 Creating Webflow record..."),await this.createWebflowRecord(a.user.id,t,n,s),console.log("🎉 Registration complete!"),e.dispatchEvent(new CustomEvent("nikoRegistrationComplete",{detail:{user:a.user,message:"Please confirm your email before proceeding.",redirectToLogin:!0}})),{success:!0,user:a.user})}catch(e){return console.error("💥 Registration failed with error:",e),{success:!1,error:e.message}}}async login(t,o){if(console.log("Logging in user:",{email:t}),!this.initialized)throw new Error("Authentication system not initialized");try{const{data:n,error:s}=await this.supabase.auth.signInWithPassword({email:t,password:o});if(s){console.error("Login error:",s);let e=s.message;return s.message.includes("Invalid login credentials")?e="Account does not exist or email/password is incorrect. Please check your credentials or sign up for a new account.":s.message.includes("Email not confirmed")?e="Please confirm your email before logging in. Check your inbox for the confirmation link.":s.message.includes("signup_disabled")?e="New registrations are currently disabled. Please contact support.":s.message.includes("email_address_invalid")?e="Please enter a valid email address.":s.message.includes("password")&&(e="Password is incorrect. Please try again."),{success:!1,error:e}}if(n.user&&!n.user.email_confirmed_at)return console.error("❌ Email not confirmed for user:",n.user.email),await this.supabase.auth.signOut(),{success:!1,error:"Please confirm your email before logging in. Check your inbox for the confirmation link."};if(console.log("Login successful:",n.user?.email),n.session&&n.user){const t=n.user.user_metadata?.user_type||n.user.user_metadata?.role||"customer";let o;await this.checkOnboardingStatus(n.user.id)?(o="retailer"===t?i.ROUTES.RETAILER_DASHBOARD:i.ROUTES.CUSTOMER_DASHBOARD,console.log("🔄 Redirecting to dashboard (onboarding complete):",o)):(o="retailer"===t?i.ROUTES.RETAILER_ONBOARDING:i.ROUTES.CUSTOMER_ONBOARDING,console.log("🔄 Redirecting to onboarding (incomplete):",o)),setTimeout(()=>{e.location.href=e.location.origin+o},100)}return{success:!0,user:n.user}}catch(e){return console.error("Login failed:",e),{success:!1,error:e.message}}}async logout(){if(console.log("Logging out user..."),!this.initialized)throw new Error("Authentication system not initialized");try{const{error:e}=await this.supabase.auth.signOut();return e?(console.error("Logout error:",e),{success:!1,error:e.message}):(localStorage.clear(),sessionStorage.clear(),console.log("Logout successful"),{success:!0})}catch(e){return console.error("Logout failed:",e),{success:!1,error:e.message}}}async getCurrentUser(){if(!this.initialized)return null;try{const{data:{user:e},error:t}=await this.supabase.auth.getUser();if(t)throw t;return e}catch(e){return console.error("Get user failed:",e),null}}async isAuthenticated(){return!!await this.getCurrentUser()}async checkAuthState(){console.log("🔍 Checking auth state...");const e=await this.getCurrentUser();e?(console.log("✅ User authenticated:",e.email),this.handleAuthenticatedUser(e)):this.isProtectedPage()?(console.log("❌ No user found on protected page, redirecting to login..."),this.redirectToLogin()):console.log("ℹ️ No user found on public page, continuing without auth")}async checkOnboardingStatus(e){try{console.log("🔍 Checking onboarding status for user:",e);const{data:t,error:o}=await this.supabase.functions.invoke("check-onboarding-status",{body:{user_id:e}});if(o)return console.error("❌ Error checking onboarding status:",o),!1;const i=t?.onboarding_completed||!1;return console.log("📊 Onboarding status:",i?"COMPLETED":"PENDING"),i}catch(e){return console.error("💥 Onboarding status check failed:",e),!1}}async createWebflowRecord(e,t,o,i){try{console.log("🔄 Calling Edge Function with:",{user_id:e,email:t,name:o,user_type:i});const{data:n,error:s}=await this.supabase.functions.invoke("create-webflow-user",{body:{user_id:e,email:t,name:o,user_type:i}});s?(console.error("❌ Webflow Edge Function error:",s),console.error("❌ Error details:",{message:s.message,status:s.status,statusText:s.statusText})):(console.log("✅ Webflow CMS record created successfully"),console.log("📊 Response data:",n))}catch(e){console.error("💥 Edge function network/runtime error:",e),console.error("🔍 Error type:",e.constructor.name)}}setupLogoutHandlers(){if("undefined"==typeof document)return;const t=()=>{const t=[];return['[niko-data="logout"]',"[data-logout]",".logout-btn",".logout-button",".logout","#logout",'a[href*="logout"]','button[onclick*="logout"]','[title*="logout"]','[title*="Logout"]','[aria-label*="logout"]','[aria-label*="Logout"]'].forEach(e=>{const o=document.querySelectorAll(e);console.log(`🔍 Selector "${e}" found ${o.length} element(s)`),o.forEach(e=>{t.includes(e)||(t.push(e),console.log("📌 Added logout element:",e.tagName,e.className,e.textContent))})}),document.querySelectorAll("button, a").forEach(e=>{const o=(e.textContent||"").toLowerCase().trim();(o.includes("logout")||o.includes("log out")||o.includes("sign out"))&&(t.includes(e)||(t.push(e),console.log("📌 Added logout element by text:",e.tagName,e.className,e.textContent)))}),console.log(`📊 Total unique logout elements found: ${t.length}`),t.forEach(t=>{const o=t.cloneNode(!0);t.parentNode.replaceChild(o,t),o.addEventListener("click",async t=>{t.preventDefault(),t.stopPropagation(),console.log("🚪 Logout button clicked");const n=o.textContent;try{o.textContent="Logging out...",o.disabled=!0;const t=await this.logout();console.log("✅ Logout result:",t),e.location.href=i.ROUTES.LOGIN_PAGE}catch(t){console.error("❌ Logout error:",t),o.textContent=n,o.disabled=!1,e.location.href=i.ROUTES.LOGIN_PAGE}})}),console.log(`✅ Setup ${t.length} logout handlers`),t.length};0===t()&&(console.log("⏳ No logout elements found initially, setting up retry attempts..."),setTimeout(()=>{console.log("🔄 Retry #1 - Looking for logout elements..."),t()},1e3),setTimeout(()=>{console.log("🔄 Retry #2 - Looking for logout elements..."),t()},3e3),setTimeout(()=>{console.log("🔄 Final retry - Looking for logout elements..."),t()},5e3)),e.nikoLogout=e.nikologout}isProtectedPage(){return void 0!==e&&(null!==document.querySelector('[niko-data="auth-required"]')||null!==document.querySelector('[data-auth="required"]')||e.location.pathname.includes("/dashboard")||e.location.pathname.includes(`${o}/app/customer/`)||e.location.pathname.includes(`${o}/app/retailer/`))}redirectToLogin(){const t=e.location.origin+i.ROUTES.LOGIN_PAGE;console.log("Redirecting to login:",t),e.location.href=t}isInitialized(){return this.initialized}getRedirectUrl(e){return"retailer"===e.toLowerCase()?i.ROUTES.RETAILER_DASHBOARD:i.ROUTES.CUSTOMER_DASHBOARD}}console.log("🏁 AUTO-INITIALIZE SECTION REACHED"),console.log("📄 Document readyState:",document.readyState),console.log("🌐 Window location:",e.location.href),"loading"===document.readyState?(console.log("⏳ Document still loading, waiting for DOMContentLoaded..."),document.addEventListener("DOMContentLoaded",()=>{console.log("🎬 DOMContentLoaded fired, creating NikoAuthCore..."),e.NikoAuthCore=new s,e.NikoAuth=e.NikoAuthCore,console.log("✅ window.NikoAuthCore created"),console.log("✅ window.NikoAuth alias created")})):(console.log("✨ Document ready, creating NikoAuthCore immediately..."),e.NikoAuthCore=new s,e.NikoAuth=e.NikoAuthCore,console.log("✅ window.NikoAuthCore created"),console.log("✅ window.NikoAuth alias created")),e.nikologout=async function(){console.log("🚪 nikologout function called"),e.NikoAuthCore?(await e.NikoAuthCore.logout(),e.location.href=i.ROUTES.LOGIN_PAGE):console.error("❌ window.NikoAuthCore not found")},console.log("✅ nikologout function registered"),e.nikoRedirectToLogin=function(){console.log("🔄 Redirecting to login page..."),e.location.href=i.ROUTES.LOGIN_PAGE},console.log("✅ nikoRedirectToLogin function registered"),console.log("🎉 NikoAuth: Professional authentication system loaded v5.0.0"),console.log("🔍 You can test with: window.NikoAuthCore or window.NikoAuth")}(window),function(e){console.log("🚀 Loading Niko Onboarding Bundle v1.0.0");const t="/app/customer/dashboard",o="/app/retailer/dashboard";class i{constructor(){this.initialized=!1,this.currentStep=1,this.totalSteps=3,this.formData={},this.userType=null,this.init()}async init(){console.log("📋 Initializing Onboarding Manager..."),e.NikoAuthCore||(console.log("⏳ Waiting for NikoAuthCore..."),await this.waitForAuth());const t=await e.NikoAuthCore.getCurrentUser();return t?(this.userType=t.user_metadata?.user_type||"customer",console.log("👤 User type:",this.userType),await e.NikoAuthCore.checkOnboardingStatus(t.id)?(console.log("✅ Onboarding already completed, redirecting to dashboard..."),void this.redirectToDashboard()):(this.initialized=!0,this.setupFormHandlers(),this.setupNavigationHandlers(),this.updateProgressBar(),void console.log("✅ Onboarding Manager initialized"))):(console.error("❌ No authenticated user found"),void(e.location.href="/app/auth/log-in"))}waitForAuth(){return new Promise(t=>{const o=setInterval(()=>{e.NikoAuthCore&&e.NikoAuthCore.initialized&&(clearInterval(o),t())},100)})}setupFormHandlers(){document.querySelectorAll("[niko-onboarding-input]").forEach(e=>{const t=e.getAttribute("niko-onboarding-input");this.formData[t]&&(e.value=this.formData[t]),e.addEventListener("change",e=>{this.formData[t]=e.target.value,this.saveProgress()}),e.addEventListener("blur",()=>{this.validateField(e)})});const e=document.querySelector('[niko-onboarding="submit"]');e&&e.addEventListener("click",e=>{e.preventDefault(),this.submitOnboarding()})}setupNavigationHandlers(){document.querySelectorAll('[niko-onboarding="next"]').forEach(e=>{e.addEventListener("click",e=>{e.preventDefault(),this.validateCurrentStep()&&this.nextStep()})}),document.querySelectorAll('[niko-onboarding="prev"]').forEach(e=>{e.addEventListener("click",e=>{e.preventDefault(),this.previousStep()})}),document.querySelectorAll("[niko-onboarding-step]").forEach(e=>{e.addEventListener("click",t=>{const o=parseInt(e.getAttribute("niko-onboarding-step"));o<=this.currentStep&&this.goToStep(o)})})}validateField(e){e.getAttribute("niko-onboarding-input");const t=e.hasAttribute("required"),o=e.type;let i=!0,n="";if(t&&!e.value.trim())i=!1,n="This field is required";else if("email"===o&&e.value)/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e.value)||(i=!1,n="Please enter a valid email address");else if("url"===o&&e.value)try{new URL(e.value)}catch{i=!1,n="Please enter a valid URL"}const s=e.parentElement.querySelector(".error-message");return s&&(s.textContent=n,s.style.display=i?"none":"block"),i?e.classList.remove("error"):e.classList.add("error"),i}validateCurrentStep(){const e=document.querySelector(`[niko-onboarding-step="${this.currentStep}"]`);if(!e)return!0;const t=e.querySelectorAll("[niko-onboarding-input][required]");let o=!0;return t.forEach(e=>{this.validateField(e)||(o=!1)}),o||this.showNotification("Please fill in all required fields","error"),o}nextStep(){this.currentStep<this.totalSteps&&(this.hideStep(this.currentStep),this.currentStep++,this.showStep(this.currentStep),this.updateProgressBar(),this.saveProgress())}previousStep(){this.currentStep>1&&(this.hideStep(this.currentStep),this.currentStep--,this.showStep(this.currentStep),this.updateProgressBar())}goToStep(e){e>=1&&e<=this.totalSteps&&e!==this.currentStep&&(this.hideStep(this.currentStep),this.currentStep=e,this.showStep(this.currentStep),this.updateProgressBar())}showStep(e){const t=document.querySelector(`[niko-onboarding-step="${e}"]`);t&&(t.style.display="block",t.classList.add("active"))}hideStep(e){const t=document.querySelector(`[niko-onboarding-step="${e}"]`);t&&(t.style.display="none",t.classList.remove("active"))}updateProgressBar(){const e=this.currentStep/this.totalSteps*100,t=document.querySelector('[niko-onboarding="progress-bar"]');t&&(t.style.width=`${e}%`);const o=document.querySelector('[niko-onboarding="progress-text"]');o&&(o.textContent=`Step ${this.currentStep} of ${this.totalSteps}`),document.querySelectorAll("[niko-onboarding-indicator]").forEach((e,t)=>{const o=t+1;o<this.currentStep?(e.classList.add("completed"),e.classList.remove("active")):o===this.currentStep?(e.classList.add("active"),e.classList.remove("completed")):e.classList.remove("active","completed")})}async submitOnboarding(){if(console.log("📤 Submitting onboarding data..."),!this.validateAllFields())return void this.showNotification("Please complete all required fields","error");const t=document.querySelector('[niko-onboarding="submit"]'),o=t?.textContent;t&&(t.textContent="Submitting...",t.disabled=!0);try{if(!await e.NikoAuthCore.getCurrentUser())throw new Error("User not authenticated");const{data:{session:t}}=await e.NikoAuthCore.supabase.auth.getSession();if(!t)throw new Error("No active session");const o=await fetch("https://bzjoxjqfpmjhbfijthpp.supabase.co/functions/v1/complete-onboarding",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t.access_token}`,apikey:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJ6am94anFmcG1qaGJmaWp0aHBwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU3NjIyMzksImV4cCI6MjA3MTMzODIzOX0.sL9omeLIgpgqYjTJM6SGQPSvUvm5z-Yr9rOzkOi2mJk"},body:JSON.stringify(this.formData)}),i=await o.json();if(!o.ok||!i.success)throw new Error(i.error||"Failed to complete onboarding");console.log("✅ Onboarding completed successfully!"),this.showNotification("Onboarding completed! Redirecting to dashboard...","success"),this.clearProgress(),setTimeout(()=>{this.redirectToDashboard()},2e3)}catch(e){console.error("❌ Onboarding submission failed:",e),this.showNotification(e.message||"Failed to complete onboarding","error"),t&&(t.textContent=o,t.disabled=!1)}}validateAllFields(){const e=document.querySelectorAll("[niko-onboarding-input][required]");let t=!0;return e.forEach(e=>{this.validateField(e)||(t=!1)}),t}saveProgress(){try{localStorage.setItem("niko_onboarding_progress",JSON.stringify({step:this.currentStep,data:this.formData,timestamp:Date.now()}))}catch(e){console.error("Failed to save progress:",e)}}loadProgress(){try{const e=localStorage.getItem("niko_onboarding_progress");if(e){const t=JSON.parse(e);if(Date.now()-t.timestamp<864e5)return this.currentStep=t.step||1,this.formData=t.data||{},!0}}catch(e){console.error("Failed to load progress:",e)}return!1}clearProgress(){try{localStorage.removeItem("niko_onboarding_progress")}catch(e){console.error("Failed to clear progress:",e)}}showNotification(e,t="info"){let o=document.querySelector('[niko-onboarding="notification"]');o||(o=document.createElement("div"),o.setAttribute("niko-onboarding","notification"),o.style.cssText="\n          position: fixed;\n          top: 20px;\n          right: 20px;\n          padding: 16px 24px;\n          border-radius: 8px;\n          z-index: 9999;\n          transition: opacity 0.3s;\n        ",document.body.appendChild(o));const i={success:"background: #10b981; color: white;",error:"background: #ef4444; color: white;",info:"background: #3b82f6; color: white;"};o.style.cssText+=i[t]||i.info,o.textContent=e,o.style.display="block",o.style.opacity="1",setTimeout(()=>{o.style.opacity="0",setTimeout(()=>{o.style.display="none"},300)},5e3)}redirectToDashboard(){const i="retailer"===this.userType?o:t;e.location.href=e.location.origin+i}}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>{e.NikoOnboarding=new i}):e.NikoOnboarding=new i,console.log("✅ Niko Onboarding Bundle loaded - Available as window.NikoOnboarding")}(window),console.log("Full bundle v6.0.0 with onboarding loaded")})();