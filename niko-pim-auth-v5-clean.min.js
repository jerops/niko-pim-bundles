(()=>{"use strict";!function(e){const o="localhost"===e.location.hostname||"127.0.0.1"===e.location.hostname||e.location.hostname.includes("webflow.io"),t=o?"/dev":"",s={SUPABASE_URL:"https://bzjoxjqfpmjhbfijthpp.supabase.co",SUPABASE_ANON_KEY:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJ6am94anFmcG1qaGJmaWp0aHBwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU3NjIyMzksImV4cCI6MjA3MTMzODIzOX0.sL9omeLIgpgqYjTJM6SGQPSvUvm5z-Yr9rOzkOi2mJk",ROUTES:{CUSTOMER_ONBOARDING:`${t}/app/customer/onboarding`,RETAILER_ONBOARDING:`${t}/app/retailer/onboarding`,CUSTOMER_DASHBOARD:`${t}/app/customer/dashboard`,RETAILER_DASHBOARD:`${t}/app/retailer/dashboard`,LOGIN_PAGE:`${t}/app/auth/log-in`}},n={getItem:e=>{const o=`; ${document.cookie}`.split(`; ${e}=`);return 2===o.length?decodeURIComponent(o.pop().split(";").shift()):null},setItem:(e,o)=>{document.cookie=`${e}=${encodeURIComponent(o)}; max-age=604800; path=/; secure; samesite=lax`},removeItem:e=>{document.cookie=`${e}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; secure; samesite=lax`}};class i{constructor(){console.log("🚀 NikoAuthCore constructor called"),this.supabase=null,this.initialized=!1,this.authStateListeners=[],console.log("📋 Initial state set, calling init()"),this.init()}async init(){console.log("🔧 Loading Niko Auth Core v5.0.0 (Professional)"),console.log("🌍 Environment:",o?"DEVELOPMENT":"PRODUCTION"),console.log("📍 Current URL:",e.location.href),console.log("🛤️ Path prefix:",t||"(none)"),console.log("🍪 Document cookies available:",document.cookie?"YES":"NO"),"undefined"==typeof supabase?(console.log("📦 Supabase not found, loading from CDN..."),await this.loadSupabase(),console.log("✅ Supabase loaded successfully")):console.log("✅ Supabase already available"),console.log("⚙️ Initializing Supabase client with professional config..."),this.supabase=supabase.createClient(s.SUPABASE_URL,s.SUPABASE_ANON_KEY,{auth:{storage:n,autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!0,flowType:"implicit"},global:{headers:{"X-Client-Info":"niko-auth-v5"}}}),console.log("✅ Supabase client created with config:",{storage:"cookieStorage",autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!0,flowType:"implicit"}),this.initialized=!0,console.log("🎉 Niko Auth Core v5.0.0 initialized with professional security"),console.log("🔗 Available on window.NikoAuthCore and window.NikoAuth"),console.log("👂 Setting up auth state listener..."),this.setupAuthStateListener(),console.log("🚪 Setting up logout handlers..."),this.setupLogoutHandlers();const i=new URLSearchParams(e.location.hash.substring(1)),a=i.get("error_code"),r=i.get("error_description");(a||r)&&(console.error("❌ Auth error in URL:",a,r),e.history.replaceState({},document.title,e.location.pathname)),console.log("🔄 Letting Supabase detect session in URL...");try{await new Promise(e=>setTimeout(e,1e3));const{data:{session:o},error:t}=await this.supabase.auth.getSession();t&&console.error("❌ Error getting session:",t),o?(console.log("✅ Session detected by Supabase"),console.log("👤 User:",o.user?.email),this.handleAuthenticatedUser(o.user),e.location.hash&&e.history.replaceState({},document.title,e.location.pathname)):(console.log("🔍 No session in URL, checking auth state..."),await this.checkAuthState())}catch(e){console.error("❌ Failed to check session:",e),await this.checkAuthState()}console.log("✨ Initialization complete!")}loadSupabase(){return new Promise((e,o)=>{const t=document.createElement("script");t.src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2",t.onload=e,t.onerror=o,document.head.appendChild(t)})}async handleEmailConfirmation(){const o=new URLSearchParams(e.location.hash.substring(1)),t=o.get("access_token"),s=o.get("refresh_token");if(!t||!s)return console.log("📭 No email confirmation tokens in URL"),!1;console.log("📬 Email confirmation tokens found in URL"),console.log("🔑 Access token (first 20 chars):",t.substring(0,20)+"...");try{const{data:o,error:n}=await this.supabase.auth.setSession({access_token:t,refresh_token:s});return n?(console.error("❌ Error setting session from email confirmation:",n),!1):(console.log("✅ Session established from email confirmation"),console.log("👤 User confirmed:",o.user?.email),await new Promise(e=>setTimeout(e,500)),e.history.replaceState({},document.title,e.location.pathname),this.handleAuthenticatedUser(o.user),!0)}catch(e){return console.error("❌ Failed to handle email confirmation:",e),!1}}setupAuthStateListener(){this.supabase.auth.onAuthStateChange((e,o)=>{switch(console.log("Auth state change:",e),e){case"SIGNED_IN":console.log("User signed in:",o?.user?.email),this.handleAuthenticatedUser(o.user);break;case"SIGNED_OUT":console.log("User signed out"),this.handleSignedOutUser();break;case"TOKEN_REFRESHED":console.log("Token refreshed automatically");break;case"USER_UPDATED":console.log("User updated")}this.authStateListeners.forEach(t=>{try{t(e,o)}catch(e){console.error("Auth state listener error:",e)}})})}onAuthStateChange(e){return this.authStateListeners.push(e),()=>{const o=this.authStateListeners.indexOf(e);o>-1&&this.authStateListeners.splice(o,1)}}handleAuthenticatedUser(o){if(!o)return;const t=o.user_metadata?.user_type||o.user_metadata?.role||"customer",s=o.user_metadata?.name||o.email?.split("@")[0]||"User";this.populateUserData(o,s,t),this.showAuthenticatedContent(),this.applyRoleBasedVisibility(t),e.dispatchEvent(new CustomEvent("nikoAuthReady",{detail:{user:o,userType:t,authenticated:!0}})),console.log("User interface updated for:",s)}handleSignedOutUser(){document.querySelectorAll('[niko-data="auth-required"]').forEach(e=>{e.style.visibility="hidden",e.style.opacity="0"}),e.dispatchEvent(new CustomEvent("nikoAuthSignedOut",{detail:{authenticated:!1}})),this.isProtectedPage()&&this.redirectToLogin()}populateUserData(e,o,t){document.querySelectorAll('[niko-data="user-name"]').forEach(e=>{e.textContent=o}),document.querySelectorAll('[niko-data="user-email"]').forEach(o=>{o.textContent=e.email}),document.querySelectorAll('[niko-data="user-role"]').forEach(e=>{e.textContent=t});const s={name:['[data-user="name"]',".user-name","#user-name"],email:['[data-user="email"]',".user-email","#user-email"],role:['[data-user="role"]',".user-role","#user-role"]};s.name.forEach(e=>{document.querySelectorAll(e).forEach(e=>e.textContent=o)}),s.email.forEach(o=>{document.querySelectorAll(o).forEach(o=>o.textContent=e.email)}),s.role.forEach(e=>{document.querySelectorAll(e).forEach(e=>e.textContent=t)})}showAuthenticatedContent(){document.querySelectorAll('[niko-data="auth-required"]').forEach(e=>{e.style.visibility="visible",e.style.opacity="1"}),document.body&&document.body.hasAttribute("niko-data")&&"auth-required"===document.body.getAttribute("niko-data")&&(document.body.style.visibility="visible",document.body.style.opacity="1")}applyRoleBasedVisibility(e){document.querySelectorAll("[niko-role]").forEach(o=>{o.getAttribute("niko-role").split(",").map(e=>e.trim()).includes(e)||o.remove()})}async register(o,t,n,i){if(console.log("📝 REGISTER METHOD CALLED"),console.log("👤 Registering user:",{email:o,userType:i,name:n}),console.log("🔧 Initialized status:",this.initialized),!this.initialized)throw console.error("❌ Authentication system not initialized"),new Error("Authentication system not initialized");try{const a="retailer"===i.toLowerCase()?e.location.origin+s.ROUTES.RETAILER_ONBOARDING:e.location.origin+s.ROUTES.CUSTOMER_ONBOARDING;console.log("🔄 Redirect URL:",a),console.log("📧 Calling Supabase auth.signUp...");const{data:r,error:l}=await this.supabase.auth.signUp({email:o,password:t,options:{data:{name:n,user_type:i.toLowerCase(),role:i.toLowerCase()},emailRedirectTo:a,captchaToken:null}});return l?(console.error("❌ Registration error:",l),{success:!1,error:l.message}):(console.log("✅ Registration successful:",r.user?.email),console.log("👤 User data:",r.user),console.log("📧 Email confirmed?",r.user?.email_confirmed_at?"YES":"NO"),console.log("🔐 Session created?",r.session?"YES":"NO"),r.user?.email_confirmed_at||console.log("📮 Confirmation email should be sent to:",r.user?.email),console.log("📊 Creating Webflow record..."),await this.createWebflowRecord(r.user.id,o,n,i),console.log("🎉 Registration complete!"),{success:!0,user:r.user})}catch(e){return console.error("💥 Registration failed with error:",e),{success:!1,error:e.message}}}async login(o,t){if(console.log("Logging in user:",{email:o}),!this.initialized)throw new Error("Authentication system not initialized");try{const{data:n,error:i}=await this.supabase.auth.signInWithPassword({email:o,password:t});if(i)return console.error("Login error:",i),{success:!1,error:i.message};if(n.user&&!n.user.email_confirmed_at)return console.error("❌ Email not confirmed for user:",n.user.email),await this.supabase.auth.signOut(),{success:!1,error:"Please confirm your email before logging in. Check your inbox for the confirmation link."};if(console.log("Login successful:",n.user?.email),n.session&&n.user){const o="retailer"===(n.user.user_metadata?.user_type||n.user.user_metadata?.role||"customer")?s.ROUTES.RETAILER_DASHBOARD:s.ROUTES.CUSTOMER_DASHBOARD;setTimeout(()=>{e.location.href=e.location.origin+o},100)}return{success:!0,user:n.user}}catch(e){return console.error("Login failed:",e),{success:!1,error:e.message}}}async logout(){if(console.log("Logging out user..."),!this.initialized)throw new Error("Authentication system not initialized");try{const{error:e}=await this.supabase.auth.signOut();return e?(console.error("Logout error:",e),{success:!1,error:e.message}):(localStorage.clear(),sessionStorage.clear(),console.log("Logout successful"),{success:!0})}catch(e){return console.error("Logout failed:",e),{success:!1,error:e.message}}}async getCurrentUser(){if(!this.initialized)return null;try{const{data:{user:e},error:o}=await this.supabase.auth.getUser();if(o)throw o;return e}catch(e){return console.error("Get user failed:",e),null}}async isAuthenticated(){return!!await this.getCurrentUser()}async checkAuthState(){console.log("🔍 Checking auth state...");const e=await this.getCurrentUser();e?(console.log("✅ User authenticated:",e.email),this.handleAuthenticatedUser(e)):this.isProtectedPage()?(console.log("❌ No user found on protected page, redirecting to login..."),this.redirectToLogin()):console.log("ℹ️ No user found on public page, continuing without auth")}async createWebflowRecord(e,o,t,s){try{console.log("🔄 Calling Edge Function with:",{user_id:e,email:o,name:t,user_type:s});const{data:n,error:i}=await this.supabase.functions.invoke("create-webflow-user",{body:{user_id:e,email:o,name:t,user_type:s}});i?(console.error("❌ Webflow Edge Function error:",i),console.error("❌ Error details:",{message:i.message,status:i.status,statusText:i.statusText})):(console.log("✅ Webflow CMS record created successfully"),console.log("📊 Response data:",n))}catch(e){console.error("💥 Edge function network/runtime error:",e),console.error("🔍 Error type:",e.constructor.name)}}setupLogoutHandlers(){if("undefined"==typeof document)return;const o=()=>{const o=[];return['[niko-data="logout"]',"[data-logout]",".logout-btn",".logout-button",".logout","#logout",'a[href*="logout"]','button[onclick*="logout"]','[title*="logout"]','[title*="Logout"]','[aria-label*="logout"]','[aria-label*="Logout"]'].forEach(e=>{const t=document.querySelectorAll(e);console.log(`🔍 Selector "${e}" found ${t.length} element(s)`),t.forEach(e=>{o.includes(e)||(o.push(e),console.log("📌 Added logout element:",e.tagName,e.className,e.textContent))})}),document.querySelectorAll("button, a").forEach(e=>{const t=(e.textContent||"").toLowerCase().trim();(t.includes("logout")||t.includes("log out")||t.includes("sign out"))&&(o.includes(e)||(o.push(e),console.log("📌 Added logout element by text:",e.tagName,e.className,e.textContent)))}),console.log(`📊 Total unique logout elements found: ${o.length}`),o.forEach(o=>{const t=o.cloneNode(!0);o.parentNode.replaceChild(t,o),t.addEventListener("click",async o=>{o.preventDefault(),o.stopPropagation(),console.log("🚪 Logout button clicked");const n=t.textContent;try{t.textContent="Logging out...",t.disabled=!0;const o=await this.logout();console.log("✅ Logout result:",o),e.location.href=s.ROUTES.LOGIN_PAGE}catch(o){console.error("❌ Logout error:",o),t.textContent=n,t.disabled=!1,e.location.href=s.ROUTES.LOGIN_PAGE}})}),console.log(`✅ Setup ${o.length} logout handlers`),o.length};0===o()&&(console.log("⏳ No logout elements found initially, setting up retry attempts..."),setTimeout(()=>{console.log("🔄 Retry #1 - Looking for logout elements..."),o()},1e3),setTimeout(()=>{console.log("🔄 Retry #2 - Looking for logout elements..."),o()},3e3),setTimeout(()=>{console.log("🔄 Final retry - Looking for logout elements..."),o()},5e3)),e.nikoLogout=e.nikologout}isProtectedPage(){return void 0!==e&&(null!==document.querySelector('[niko-data="auth-required"]')||null!==document.querySelector('[data-auth="required"]')||e.location.pathname.includes("/dashboard")||e.location.pathname.includes(`${t}/app/customer/`)||e.location.pathname.includes(`${t}/app/retailer/`))}redirectToLogin(){const o=e.location.origin+s.ROUTES.LOGIN_PAGE;console.log("Redirecting to login:",o),e.location.href=o}isInitialized(){return this.initialized}getRedirectUrl(e){return"retailer"===e.toLowerCase()?s.ROUTES.RETAILER_DASHBOARD:s.ROUTES.CUSTOMER_DASHBOARD}}console.log("🏁 AUTO-INITIALIZE SECTION REACHED"),console.log("📄 Document readyState:",document.readyState),console.log("🌐 Window location:",e.location.href),"loading"===document.readyState?(console.log("⏳ Document still loading, waiting for DOMContentLoaded..."),document.addEventListener("DOMContentLoaded",()=>{console.log("🎬 DOMContentLoaded fired, creating NikoAuthCore..."),e.NikoAuthCore=new i,e.NikoAuth=e.NikoAuthCore,console.log("✅ window.NikoAuthCore created"),console.log("✅ window.NikoAuth alias created")})):(console.log("✨ Document ready, creating NikoAuthCore immediately..."),e.NikoAuthCore=new i,e.NikoAuth=e.NikoAuthCore,console.log("✅ window.NikoAuthCore created"),console.log("✅ window.NikoAuth alias created")),e.nikologout=async function(){console.log("🚪 nikologout function called"),e.NikoAuthCore?(await e.NikoAuthCore.logout(),e.location.href=s.ROUTES.LOGIN_PAGE):console.error("❌ window.NikoAuthCore not found")},console.log("✅ nikologout function registered"),console.log("🎉 NikoAuth: Professional authentication system loaded v5.0.0"),console.log("🔍 You can test with: window.NikoAuthCore or window.NikoAuth")}(window),console.log("Full bundle v5.0.0 loaded")})();